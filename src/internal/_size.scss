// TODO: Move all vars below into config in future release. This file should only be left with mixins.

/* Breakpoints */
$xs: 'xs';
$sm: 'sm';
$md: 'md';
$lg: 'lg';
$xl: 'xl';
$viewports: ($xs, $sm, $md, $lg, $xl);

/* Fonts */
// TODO Need to standardize these around a base font size for $font-size-m
$font-size-xs: 0.75rem;
$font-size-s: 0.875rem;
$font-size-m: 1rem;
$font-size-l: 1.25rem;
$font-size-xl: 1.5rem;
$font-sizes: (
    $xs: $font-size-xs,
    $sm: $font-size-s,
    $md: $font-size-m,
    $lg: $font-size-l,
    $xl: $font-size-xl,
);

/* Media Queries */
/* Smaller than the defined pixels are the dimensions for that range */
$breakpoints: (
    $xs: 640px,
    $sm: 768px,
    $md: 1024px,
    $lg: 1280px,
    $xl: 1536px,
);

$breakpoint-pairs: (
    $sm: $xs,
    $md: $sm,
    $lg: $md,
    $xl: $lg,
);

@mixin screen-above($breakpoint) {
    @if not map-has-key($map: $breakpoints, $key: $breakpoint) {
        @error 'The given breakpoint #{$breakpoint} for @screen-above does not exist.';
    }

    @media screen and (min-width: map-get($breakpoints, $breakpoint)) {
        @content;
    }
}

@mixin screen-between($lower, $higher) {
    @if not map-has-key($map: $breakpoints, $key: $lower) {
        @error 'The given breakpoint #{$lower} ($lower) for @screen-between does not exist.';
    }

    @if not map-has-key($map: $breakpoints, $key: $higher) {
        @error 'The given breakpoint #{$higher} ($higher) for @screen-between does not exist.';
    }

    @media screen and (min-width: map-get($breakpoints, $lower)) and (max-width: map-get($breakpoints, $higher) - 1) {
        @content;
    }
}

@mixin screen-below($breakpoint) {
    @if not map-has-key($map: $breakpoints, $key: $breakpoint) {
        @error 'The given breakpoint #{$breakpoint} for @screen-below does not exist.';
    }

    @media screen and (max-width: map-get($breakpoints, $breakpoint) - 1) {
        @content;
    }
}

// TODO: Once we move to dart-sass, look into using content with variables
@mixin generate-classes-for-viewport(
    $classes,
    $property,
    $prefix: 'u-',
    $generate-viewports: 'true',
    $include-important: 'true'
) {
    // We build in this order since we want larger viewports to have higher precedence
    // so we can write classes like u-none u-block-md u-none-lg
    $important: if($include-important == 'true', '!important', '');

    @each $class in $classes {
        .#{$prefix}#{$class} {
            #{$property}: $class#{$important};
        }
    }

    @if $generate-viewports == 'true' {
        @each $suffix, $limit in $breakpoint-pairs {
            @each $class in $classes {
                @include screen-above($limit) {
                    .#{$prefix}#{$class}-#{$suffix} {
                        #{$property}: $class#{$important};
                    }
                }
            }
        }
    }
}

/* Variant of mixin that takes in mapping of class name to value */
@mixin generate-classes-for-viewport-with-map(
    $class-value-pairs,
    $property,
    $prefix: 'u-',
    $generate-viewports: 'true',
    $include-important: 'true'
) {
    $important: if($include-important == 'true', '!important', '');

    @each $class, $value in $class-value-pairs {
        .#{$prefix}#{$class} {
            #{$property}: $value#{$important};
        }
    }

    @if $generate-viewports == 'true' {
        @each $suffix, $limit in $breakpoint-pairs {
            @each $class, $value in $class-value-pairs {
                @include screen-above($limit) {
                    .#{$prefix}#{$class}-#{$suffix} {
                        #{$property}: $value#{$important};
                    }
                }
            }
        }
    }
}

/**
 * DART SASS ONLY: Generates viewport classes given styles in a @content mixin
 * 
 * When using this mixin, you must follow specify a mixin that takes in the same number of variables that is being passed into @content below -- in this case, 1.
 * 
 * Example usage (pretend \ is $):
 *      
 *       @include generate-styles-with-viewports('true') using ($viewport) {
 *           $suffix: if($viewport != '', '-#{\viewport}', '');
 *           .outer#{\suffix} {
 *               background: #222;
 *               .inner#{\suffix} {
 *                   color: #fff;
 *               }
 *           }
 *       }
 */
@mixin generate-styles-with-viewports($generate-viewports: 'true') {
    @content ('');

    @if $generate-viewports == 'true' {
        @each $suffix, $limit in $breakpoint-pairs {
            @include screen-above($limit) {
                @content ($suffix);
            }
        }
    }
}
