@use 'sass:map';
@use 'sass:list';
@use '../../node_modules/sass-true/sass/config/throw';

@use 'flags';
@use 'size';
@use 'theme';
@use 'functions';

// ==================================================
// User config
// ==================================================
// Deep merged with the default config. This means that this will override existing keys and append new key value pairs.
// If you pass in null for any field, it will clear the values from default-config. Example:
// 
//      $config :(
//          colors: (
//              blues: null
//          )
//      );
// 
// This will disable all blues defined in $default-config from being generated.
$config: (
    extend: ()
) !default;

// ==================================================
// Default config
// ==================================================
$default-config: (

    // Turn on/off generating viewport classes to save on size.
    // TODO extend to include "!important" option
    viewports: (
        flags.$CLEARFIX: true,
        flags.$DISPLAY: true,
        flags.$FLEX: true,
        flags.$FLOAT: true,
        flags.$OVERFLOW: true,
        flags.$POSITION: true,
        flags.$TEXT: true,
        flags.$MARGIN-PADDING: true,
        flags.$OPACITY: true,
        flags.$BACKGROUND-OPACITY: false,
        flags.$COLOR-OPACITY: false,
        flags.$WIDTHS: true,
        flags.$HEIGHTS: true,
        flags.$ZINDEX: false,
        flags.$ABSOLUTES: false,
        flags.$GAP: false,
        flags.$MIN-HEIGHT: false,
        flags.$MAX-HEIGHT: false,
        flags.$MIN-WIDTH: false,
        flags.$MAX-WIDTH: false,
        flags.$GRID: true,
    ),

    // Extend all existing styles here
    extend: (
        avatar-sizes: (),
        button-sizes: (),
        // Please define all colors using hex
        // Omitting some colors may break Cirrus builds
        colors: (
            pinks: (),
            reds: (),
            oranges: (),
            yellows: (),
            greens: (),
            teals: (),
            blues: (),
            indigos: (),
            purples: (),
            grays: (),
        ),
        fonts: (
            sizes: (
                heading: (),
                headline: (),
                text: (),
            ),
            transforms: (),
            weights: (),
        ),
        form-label-sizes: (),
        form-sizes: (
            input-sizes: (),
            inpuit-contains-icon-padding: (),
            input-icon-sizes: (),
        ),
        progress: (
            sizes: (),
            themes: (),
        ),
        space-sizes: (),
        tab-sizes: (),

        absolute: (),
        heights: (),
        minmax-heights: (),
        minmax-widths: (),
        opacity: (),
        round: (),
        sizing-system: (),
        shadows: (),
        widths: (),
        z-index: (),
    ),

    // Turn off certain features from being loaded. If left blank, all components are generated by default.
    excludes: (
        
    ),

    // Enable certain classes to be generated. Takes precedence over $EXCLUDE.
    includes: (

    ),

    // COMPONENTS //
    // Avatar sizes
    avatar-sizes:
        (
            size.$xs: (
                font-size: 0.8rem,
                width: 1.6rem,
                height: 1.6rem,
            ),
            size.$sm: (
                font-size: 1rem,
                width: 2.4rem,
                height: 2.4rem,
            ),
            size.$lg: (
                font-size: 2rem,
                width: 4.8rem,
                height: 4.8rem,
            ),
            size.$xl: (
                font-size: 3rem,
                width: 6.4rem,
                height: 6.4rem,
            ),
        ),
    // Button sizes
    button-sizes:
        (
            size.$xs: (
                padding: 0 0.5rem,
                font-size: 50%,
            ),
            size.$sm: (
                padding: 0.25rem 1rem,
                font-size: 70%,
            ),
            size.$md: (
                padding: 0.5rem 1.5rem,
                font-size: 90%,
            ),
            size.$lg: (
                padding: 0.75rem 2rem,
                font-size: 110%,
            ),
            size.$xl: (
                padding: 1rem 2.5rem,
                font-size: 130%,
            ),
        ),
    colors: (
        pinks: (
            '100': #fce8f3,
            '200': #fad1e8,
            '300': #f8b4d9,
            '400': #f17eb8,
            '500': #e74694,
            '600': #d61f69,
            '700': #bf125d,
            '800': #99154b,
            '900': #751a3d,
        ),
        reds: (
            '100': #fde8e8,
            '200': #fbd5d5,
            '300': #f8b4b4,
            '400': #f98080,
            '500': #f05252,
            '600': #e02424,
            '700': #c81e1e,
            '800': #9b1c1c,
            '900': #771d1d,
        ),
        oranges: (
            '100': #feecdc,
            '200': #fcd9bd,
            '300': #fdba8c,
            '400': #ff8a4c,
            '500': #ff5a1f,
            '600': #d03801,
            '700': #b43403,
            '800': #8a2c0d,
            '900': #73230d,
        ),
        yellows: (
            '100': #fdf6b2,
            '200': #fce96a,
            '300': #faca15,
            '400': #e3a008,
            '500': #c27803,
            '600': #9f580a,
            '700': #8e4b10,
            '800': #723b13,
            '900': #633112,
        ),
        greens: (
            '100': #def7ec,
            '200': #bcf0da,
            '300': #84e1bc,
            '400': #31c48d,
            '500': #0e9f6e,
            '600': #057a55,
            '700': #046c4e,
            '800': #03543f,
            '900': #014737,
        ),
        teals: (
            '100': #d5f5f6,
            '200': #afecef,
            '300': #7edce2,
            '400': #16bdca,
            '500': #0694a2,
            '600': #047481,
            '700': #036672,
            '800': #05505c,
            '900': #014451,
        ),
        blues: (
            '100': #e1effe,
            '200': #c3ddfd,
            '300': #a4cafe,
            '400': #76a9fa,
            '500': #3f83f8,
            '600': #1c64f2,
            '700': #1a56db,
            '800': #1e429f,
            '900': #233876,
        ),
        indigos: (
            '100': #e5edff,
            '200': #cddbfe,
            '300': #b4c6fc,
            '400': #8da2fb,
            '500': #6875f5,
            '600': #5850ec,
            '700': #5145cd,
            '800': #42389d,
            '900': #362f78,
        ),
        purples: (
            '100': #edebfe,
            '200': #dcd7fe,
            '300': #cabffd,
            '400': #ac94fa,
            '500': #9061f9,
            '600': #7e3af2,
            '700': #6c2bd9,
            '800': #5521b5,
            '900': #4a1d96,
        ),
        grays: (
            '000': #f8f9fa,
            '100': #f1f3f5,
            '200': #e9ecef,
            '300': #dee2e6,
            '400': #ced4da,
            '500': #adb5bd,
            '600': #868e96,
            '700': #495057,
            '800': #343a40,
            '900': #212529,
        ),
    ),
    fonts: (
        sizes: (
            heading: (
                h6: (
                    default: (
                        font-size: size.$font-size-m,
                    ),
                    sm-above: (
                        font-size: size.$font-size-l,
                    ),
                ),
                h5: (
                    default: (
                        font-size: 1.25rem,
                    ),
                    sm-above: (
                        font-size: size.$font-size-xl,
                    ),
                ),
                h4: (
                    default: (
                        font-size: 1.5rem,
                    ),
                    sm-above: (
                        font-size: 1.75rem,
                    ),
                ),
                h3: (
                    default: (
                        font-size: 1.75rem,
                    ),
                    sm-above: (
                        font-size: 2rem,
                    ),
                ),
                h2: (
                    default: (
                        font-size: 2rem,
                    ),
                    sm-above: (
                        font-size: 2.5rem,
                    ),
                ),
                h1: (
                    default: (
                        font-size: 2.25rem,
                    ),
                    sm-above: (
                        font-size: 3rem,
                        letter-spacing: 0.025rem,
                    ),
                ),
            ),
            headline: (
                headline-4: (
                    default: (
                        font-size: 3rem,
                    ),
                    sm-above: (
                        font-size: 3.5rem,
                    ),
                ),
                headline-3: (
                    default: (
                        font-size: 3.25rem,
                    ),
                    sm-above: (
                        font-size: 4.5rem,
                    ),
                ),
                headline-2: (
                    default: (
                        font-size: 3.5rem,
                    ),
                    sm-above: (
                        font-size: 5.5rem,
                    ),
                ),
                headline-1: (
                    default: (
                        font-size: 3.75rem,
                    ),
                    sm-above: (
                        font-size: 6.5rem,
                    ),
                ),
            ),
            text: (
                size.$xs: (
                    font-size: size.$font-size-xs !important,
                    line-height: 1.5rem !important,
                ),
                size.$sm: (
                    font-size: size.$font-size-s !important,
                    line-height: 1.75rem !important,
                ),
                size.$md: (
                    font-size: size.$font-size-m !important,
                    line-height: 2rem !important,
                ),
                size.$lg: (
                    font-size: size.$font-size-l !important,
                    line-height: 2.25rem !important,
                ),
                size.$xl: (
                    font-size: size.$font-size-xl !important,
                    line-height: 2.25rem !important,
                ),
            ),
        ),
        transforms: (uppercase: uppercase, lowercase: lowercase, capitalize: capitalize),
        weights: (
            'extrathin': 100,
            'thin': 200,
            'light': 300,
            'normal': 400,
            'medium': 500,
            'semibold': 600,
            'bold': 700,
            'extrabold': 800,
            'black': 900,
        ),
    ),
    // Form label sizes
    form-label-sizes:
        (
            size.$xs: size.$font-size-xs,
            size.$sm: size.$font-size-s,
            size.$lg: size.$font-size-l,
            size.$xl: size.$font-size-xl,
        ),
    form-sizes: (
        input-sizes: (
            size.$xs: (
                font-size: size.$font-size-xs,
                padding: 0.35rem 0.9rem,
            ),
            size.$sm: (
                font-size: size.$font-size-s,
                padding: 0.55rem 1rem,
            ),
            size.$lg: (
                font-size: size.$font-size-l,
            ),
            size.$xl: (
                font-size: size.$font-size-xl,
            ),
        ),
        input-contains-icon-padding: (
            size.$xs: 2rem,
            size.$sm: 2.5rem,
            size.$lg: 3.5rem,
            size.$xl: 4rem,
        ),
        input-icon-sizes: (
            size.$xs: (
                line-height: 1.75rem,
                width: 1.75rem,
                font-size: 7px,
            ),
            size.$sm: (
                width: 2.5rem,
                font-size: 14px,
            ),
            size.$lg: (
                line-height: 3.5rem,
                width: 3.5rem,
                font-size: 28px,
            ),
            size.$xl: (
                line-height: 2.5rem,
                width: 3.75rem,
                font-size: 35px,
            ),
        ),
    ),
    // Progress Bar Heights
    progress: (
        sizes: (
            size.$xs: (height: 0.25rem),
            size.$sm: (height: 0.5rem),
            size.$md: (height: 0.75rem),
            size.$lg: (height: 1rem),
            size.$xl: (height: 1.25rem),
        ),
        themes: theme.$control-themes,
    ),
    // Space sizes
    space-sizes:
        (
            size.$lg: (
                padding: 1rem 0,
            ),
            size.$xl: (
                padding: 2rem 0,
            ),
        ),
    // Tab font sizes
    tab-sizes:
        (
            size.$xs: size.$font-size-xs,
            size.$sm: size.$font-size-s,
            size.$lg: size.$font-size-l,
            size.$xl: size.$font-size-xl,
        ),
    // UTILITIES //
    absolute:
        (
            auto: auto,
            0: 0,
            50p: 50%,
            100p: 100%,
            n50p: -50%,
            n100p: -100%,
        ),
    grid: (
        grid-gaps: (
            0: 0,
            1: 0.25rem,
            2: 0.5rem,
            3: 1rem,
            4: 1.25rem,
            5: 1.5rem,
            6: 2rem,
            7: 3rem,
            8: 4rem,
            9: 5rem,
            10: 7rem,
            11: 9rem,
            12: 12rem,
        ),
        properties: (
            default-grid-gap: 2,
            grid-columns: 12,
        )
    ),
    heights: (
        10: 10%,
        20: 20%,
        30: 30%,
        40: 40%,
        50: 50%,
        60: 60%,
        70: 70%,
        80: 80%,
        90: 90%,
        100: 100%,
        auto: auto,
        screen: 100vh,
    ),
    minmax-heights: (
        'none': none,
        size.$xs: map-get(size.$breakpoints, size.$xs),
        size.$sm: map-get(size.$breakpoints, size.$sm),
        size.$md: map-get(size.$breakpoints, size.$md),
        size.$lg: map-get(size.$breakpoints, size.$lg),
        size.$xl: map-get(size.$breakpoints, size.$xl),
        10: 10%,
        20: 20%,
        30: 30%,
        40: 40%,
        50: 50%,
        60: 60%,
        70: 70%,
        80: 80%,
        90: 90%,
        100: 100%,
        screen: 100vh,
    ),
    minmax-widths: (
        'none': none,
        size.$xs: map-get(size.$breakpoints, size.$xs),
        size.$sm: map-get(size.$breakpoints, size.$sm),
        size.$md: map-get(size.$breakpoints, size.$md),
        size.$lg: map-get(size.$breakpoints, size.$lg),
        size.$xl: map-get(size.$breakpoints, size.$xl),
        10: 10%,
        20: 20%,
        30: 30%,
        40: 40%,
        50: 50%,
        60: 60%,
        70: 70%,
        80: 80%,
        90: 90%,
        100: 100%,
        screen: 100vw,
    ),
    opacity: (
        0: 0,
        10: 0.1,
        20: 0.2,
        30: 0.3,
        40: 0.4,
        50: 0.5,
        60: 0.6,
        70: 0.7,
        80: 0.8,
        90: 0.9,
        100: 1,
    ),
    round: (
        'none': 0px,
        size.$xs: .25rem,
        size.$sm: .5rem,
        size.$md: .75rem,
        size.$lg: 1rem,
        size.$xl: 1.25rem,
        'full': 9001px,
    ),
    sizing-system: (
        0: 0rem,
        1: 0.5rem,
        2: 1rem,
        3: 1.5rem,
        4: 2rem,
        5: 2.5rem,
        6: 3rem,
        8: 4rem,
        10: 5rem,
        12: 6rem,
        16: 8rem,
        20: 10rem,
        24: 12rem,
        32: 16rem,
    ),
    shadows: (
        'none': (
            --cirrus-shadow: 0 0 #000,
        ),
        size.$xs: (
            --cirrus-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05),
        ),
        size.$sm: (
            --cirrus-shadow: (0 1px 3px 0 rgba(0, 0, 0, 0.1),
            0 1px 2px 0 rgba(0, 0, 0, 0.06)),
        ),
        size.$md: (
            --cirrus-shadow: (0 4px 6px -1px rgba(0, 0, 0, 0.1),
            0 2px 4px -1px rgba(0, 0, 0, 0.06)),
        ),
        size.$lg: (
            --cirrus-shadow: (0 10px 15px -3px rgba(0, 0, 0, 0.1),
            0 4px 6px -2px rgba(0, 0, 0, 0.05)),
        ),
        size.$xl: (
            --cirrus-shadow: (0 20px 25px -5px rgba(0, 0, 0, 0.1),
            0 10px 10px -5px rgba(0, 0, 0, 0.04)),
        ),
        'inset': (
            --cirrus-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.06),
        ),
    ),
    widths: (
        10: 10%,
        20: 20%,
        30: 30%,
        40: 40%,
        50: 50%,
        60: 60%,
        70: 70%,
        80: 80%,
        90: 90%,
        100: 100%,
        auto: auto,
        screen: 100vw,
    ),
    z-index: (
        'n1': -1,
        0: 0,
        1: 1,
        10: 10,
        20: 20,
        30: 30,
        40: 40,
        50: 50,
        auto: auto,
    )
) !default;

// ==================================================
// Exported values
// ==================================================
$all-config: map.deep-merge($default-config, $config);


// ==================================================
// Exported values
// ==================================================

// FLAGS
$viewport-flags: map.get($all-config, viewports);
$excludes: map.get($all-config, excludes);
$includes: map.get($all-config, includes);

// COLORS
/* v2 Colors */
$pinks: functions.get-with-extend($all-config, colors, pinks);
$reds: functions.get-with-extend($all-config, colors, reds);
$oranges: functions.get-with-extend($all-config, colors, oranges);
$yellows: functions.get-with-extend($all-config, colors, yellows);
$greens: functions.get-with-extend($all-config, colors, greens);
$teals: functions.get-with-extend($all-config, colors, teals);
$blues: functions.get-with-extend($all-config, colors, blues);
$indigos: functions.get-with-extend($all-config, colors, indigos);
$purples: functions.get-with-extend($all-config, colors, purples);
$grays: functions.get-with-extend($all-config, colors, grays);
$v2Palettes: (
    'pink': $pinks,
    'red': $reds,
    'orange': $oranges,
    'yellow': $yellows,
    'green': $greens,
    'teal': $teals,
    'blue': $blues,
    'indigo': $indigos,
    'purple': $purples,
    'gray': $grays,
);

// COMPONENTS
$avatar-sizes: functions.get-with-extend($all-config, avatar-sizes);
$button-sizes: functions.get-with-extend($all-config, button-sizes);
$form-label-sizes: functions.get-with-extend($all-config, form-label-sizes);
$font-heading-sizes: functions.get-with-extend($all-config, fonts, sizes, heading);
$font-headline-sizes: functions.get-with-extend($all-config, fonts, sizes, headline);
$font-text-sizes: functions.get-with-extend($all-config, fonts, sizes, text);
$font-transforms: functions.get-with-extend($all-config, fonts, transforms);
$font-weights: functions.get-with-extend($all-config, fonts, weights);

// Form sizes
$input-sizes: functions.get-with-extend($all-config, form-sizes, input-sizes);
$input-contains-icon-padding: functions.get-with-extend($all-config, form-sizes, input-contains-icon-padding);
$input-icon-sizes: functions.get-with-extend($all-config, form-sizes, input-icon-sizes);

$progress-bar-sizes: functions.get-with-extend($all-config, progress, sizes);
$progress-bar-themes: functions.get-with-extend($all-config, progress, themes);
$space-sizes: functions.get-with-extend($all-config, space-sizes);
$tab-font-sizes: functions.get-with-extend($all-config, tab-sizes);

// UTILS
$absolute: functions.get-with-extend($all-config, absolute);

$heights: functions.get-with-extend($all-config, heights);
$widths: functions.get-with-extend($all-config, widths);
$minmax-heights: functions.get-with-extend($all-config, minmax-heights);
$minmax-widths: functions.get-with-extend($all-config, minmax-widths);

$grid-gaps: functions.get-with-extend($all-config, grid, grid-gaps);
$grid-properties: functions.get-with-extend($all-config, grid, properties);
$grid-columns: map.get($grid-properties, grid-columns);
$default-grid-gap: map.get($grid-properties, default-grid-gap);

$opacities: functions.get-with-extend($all-config, opacity);
$round: functions.get-with-extend($all-config, round);
$shadows: functions.get-with-extend($all-config, shadows);
$spacing-system: functions.get-with-extend($all-config, sizing-system);
$z-indexes: functions.get-with-extend($all-config, z-index);

/*
    Fetch feature flag for different utility class types for generating viewport classes (e.g., u-flex-sm, u-flex-md, etc.).
*/
@function get-viewport-flag($name) {
    @return get-viewport-flag-internal($viewport-flags, $name);
}
@function get-viewport-flag-internal($flag-map, $name) {
    @if not map-has-key($flag-map, $name) {
        @return throw.error(
            $message: '[get-viewport-flag] Unknown constant `#{$name}`.',
            $source: 'get-viewport-flag()',
            $catch: true
        );
    }

    @return map.get($flag-map, $name);
}

/*
  Helper function to determine if a set of classes should be generated based on given include/exclude configuration.
*/
@function should-generate-classes($flag) {
    @return should-generate-classes-internal($includes, $excludes, $flag);
}
@function should-generate-classes-internal($to-include, $to-exclude, $flag) {
    $generate-classes: true;
    @if list.index($to-exclude, flags.$ALL) {
      $generate-classes: false;
    }
    @if list.index($to-exclude, $flag) {
      $generate-classes: false;
    }
    @if list.index($to-include, $flag) {
      $generate-classes: true;
    }

    @return $generate-classes;
}
