@use 'sass:map';
@use 'sass:list';
@use '../../node_modules/sass-true/sass/config/throw';

@use 'flags';
@use 'size';
@use 'theme';
@use 'functions';

// ==================================================
// User config
// ==================================================
// Deep merged with the default config. This means that this will override existing keys and append new key value pairs.
$config: (
    
) !default;

// ==================================================
// Default config
// ==================================================
$default-config: (

    // Turn on/off generating viewport classes to save on size.
    // TODO extend to include "!important" option
    viewports: (
        flags.$CLEARFIX: true,
        flags.$DISPLAY: true,
        flags.$FLEX: true,
        flags.$FLOAT: true,
        flags.$OVERFLOW: true,
        flags.$POSITION: true,
        flags.$TEXT: true,
        flags.$MARGIN-PADDING: true,
        flags.$OPACITY: true,
        flags.$WIDTHS: true,
        flags.$HEIGHTS: true,
        flags.$ZINDEX: false,
        flags.$ABSOLUTE: false,
        flags.$FLEX-GAP: false,
        flags.$MIN-HEIGHT: false,
        flags.$MAX-HEIGHT: false,
        flags.$MIN-WIDTH: false,
        flags.$MAX-WIDTH: false,
        flags.$GRID: true,
    ),

    // Turn off certain features from being loaded. If left blank, all components are generated by default.
    excludes: (
        
    ),

    // Enable certain classes to be generated. Takes precedence over $EXCLUDE.
    includes: (

    ),

    // COMPONENTS //
    // Avatar sizes
    avatar-sizes:
        (
            size.$xs: (
                font-size: 0.8rem,
                width: 1.6rem,
                height: 1.6rem,
            ),
            size.$sm: (
                font-size: 1rem,
                width: 2.4rem,
                height: 2.4rem,
            ),
            size.$lg: (
                font-size: 2rem,
                width: 4.8rem,
                height: 4.8rem,
            ),
            size.$xl: (
                font-size: 3rem,
                width: 6.4rem,
                height: 6.4rem,
            ),
        ),
    // Button sizes
    button-sizes:
        (
            size.$xs: (
                padding: 0 0.5rem,
                font-size: 50%,
            ),
            size.$sm: (
                padding: 0.25rem 1rem,
                font-size: 70%,
            ),
            size.$md: (
                padding: 0.5rem 1.5rem,
                font-size: 90%,
            ),
            size.$lg: (
                padding: 0.75rem 2rem,
                font-size: 110%,
            ),
            size.$xl: (
                padding: 1rem 2.5rem,
                font-size: 130%,
            ),
        ),
    colors: (
        pinks: (
            '100': #f8e7f1,
            '200': #f3d2e3,
            '300': #ecb7d3,
            '400': #eb8cbc,
            '500': #dd5a9c,
            '600': #d12e81,
            '700': #a21f61,
            '800': #831b50,
            '900': #741648,
        ),
        reds: (
            '100': #fde7e9,
            '200': #fbd4d5,
            '300': #f7b1b1,
            '400': #f19393,
            '500': #e85c61,
            '600': #db3839,
            '700': #b31e1d,
            '800': #9b1313,
            '900': #890e10,
        ),
        oranges: (
            '100': #fdeed1,
            '200': #fbdbaa,
            '300': #f6b65c,
            '400': #f19736,
            '500': #e4771c,
            '600': #c45307,
            '700': #9b3908,
            '800': #842b09,
            '900': #890e10,
        ),
        yellows: (
            '100': #fffde4,
            '200': #f9e978,
            '300': #f6da52,
            '400': #e8bb24,
            '500': #d29507,
            '600': #9d6b0c,
            '700': #7c4d09,
            '800': #6c3e0c,
            '900': #5d320f,
        ),
        greens: (
            '100': #e1f7eb,
            '200': #c2ecd6,
            '300': #98d9b7,
            '400': #64c192,
            '500': #44a675,
            '600': #33855d,
            '700': #27684a,
            '800': #275440,
            '900': #234535,
        ),
        teals: (
            '100': #ddf2f5,
            '200': #b5e6eb,
            '300': #7fced5,
            '400': #59bac3,
            '500': #1e9ca8,
            '600': #0f7d8a,
            '700': #0a616a,
            '800': #105157,
            '900': #114448,
        ),
        blues: (
            '100': #e1effc,
            '200': #bfdcfc,
            '300': #8bc2f8,
            '400': #5fa7f3,
            '500': #3c91ec,
            '600': #1b74d9,
            '700': #1e5898,
            '800': #1e4c80,
            '900': #1c3c63,
        ),
        indigos: (
            '100': #e2efff,
            '200': #c4dbfd,
            '300': #a1befa,
            '400': #89a3f7,
            '500': #6c83e9,
            '600': #5966d9,
            '700': #4c4f9e,
            '800': #42417b,
            '900': #3a3462,
        ),
        purples: (
            '100': #f0e9fb,
            '200': #e2d4f8,
            '300': #cbb2f6,
            '400': #b89af4,
            '500': #9c73ed,
            '600': #8256e1,
            '700': #6340b6,
            '800': #50388e,
            '900': #413170,
        ),
        grays: (
            '000': #f8f9fa,
            '100': #f1f3f5,
            '200': #e9ecef,
            '300': #dee2e6,
            '400': #ced4da,
            '500': #adb5bd,
            '600': #868e96,
            '700': #495057,
            '800': #343a40,
            '900': #212529,
        ),
    ),
    fonts: (
        sizes: (
            heading: (
                h6: (
                    default: (
                        font-size: size.$font-size-m,
                    ),
                    sm-above: (
                        font-size: size.$font-size-l,
                    ),
                ),
                h5: (
                    default: (
                        font-size: 1.25rem,
                    ),
                    sm-above: (
                        font-size: size.$font-size-xl,
                    ),
                ),
                h4: (
                    default: (
                        font-size: 1.5rem,
                    ),
                    sm-above: (
                        font-size: 1.75rem,
                    ),
                ),
                h3: (
                    default: (
                        font-size: 1.75rem,
                    ),
                    sm-above: (
                        font-size: 2rem,
                    ),
                ),
                h2: (
                    default: (
                        font-size: 2rem,
                    ),
                    sm-above: (
                        font-size: 2.5rem,
                    ),
                ),
                h1: (
                    default: (
                        font-size: 2.25rem,
                    ),
                    sm-above: (
                        font-size: 3rem,
                        letter-spacing: 0.025rem,
                    ),
                ),
            ),
            headline: (
                headline-4: (
                    default: (
                        font-size: 3rem,
                    ),
                    sm-above: (
                        font-size: 3.5rem,
                    ),
                ),
                headline-3: (
                    default: (
                        font-size: 3.25rem,
                    ),
                    sm-above: (
                        font-size: 4.5rem,
                    ),
                ),
                headline-2: (
                    default: (
                        font-size: 3.5rem,
                    ),
                    sm-above: (
                        font-size: 5.5rem,
                    ),
                ),
                headline-1: (
                    default: (
                        font-size: 3.75rem,
                    ),
                    sm-above: (
                        font-size: 6.5rem,
                    ),
                ),
            ),
            text: (
                size.$xs: (
                    font-size: size.$font-size-xs !important,
                    line-height: 1.5rem !important,
                ),
                size.$sm: (
                    font-size: size.$font-size-s !important,
                    line-height: 1.75rem !important,
                ),
                size.$md: (
                    font-size: size.$font-size-m !important,
                    line-height: 2rem !important,
                ),
                size.$lg: (
                    font-size: size.$font-size-l !important,
                    line-height: 2.25rem !important,
                ),
                size.$xl: (
                    font-size: size.$font-size-xl !important,
                    line-height: 2.25rem !important,
                ),
            ),
        ),
        transforms: (uppercase, lowercase, capitalize),
        weights: (
            'extrathin': 100,
            'thin': 200,
            'light': 300,
            'normal': 400,
            'medium': 500,
            'semibold': 600,
            'bold': 700,
            'extrabold': 800,
            'black': 900,
        ),
    ),
    // Form label sizes
    form-label-sizes:
        (
            size.$xs: size.$font-size-xs,
            size.$sm: size.$font-size-s,
            size.$lg: size.$font-size-l,
            size.$xl: size.$font-size-xl,
        ),
    form-sizes: (
        input-sizes: (
            size.$xs: (
                font-size: size.$font-size-xs,
                padding: 0.35rem 0.9rem,
            ),
            size.$sm: (
                font-size: size.$font-size-s,
                padding: 0.55rem 1rem,
            ),
            size.$lg: (
                font-size: size.$font-size-l,
            ),
            size.$xl: (
                font-size: size.$font-size-xl,
            ),
        ),
        input-contains-icon-padding: (
            size.$xs: 2rem,
            size.$sm: 2.5rem,
            size.$lg: 3.5rem,
            size.$xl: 4rem,
        ),
        input-icon-sizes: (
            size.$xs: (
                line-height: 1.75rem,
                width: 1.75rem,
                font-size: 7px,
            ),
            size.$sm: (
                width: 2.5rem,
                font-size: 14px,
            ),
            size.$lg: (
                line-height: 3.5rem,
                width: 3.5rem,
                font-size: 28px,
            ),
            size.$xl: (
                line-height: 2.5rem,
                width: 3.75rem,
                font-size: 35px,
            ),
        ),
    ),
    // Progress Bar Heights
    progress: (
        sizes: (
            size.$xs: (height: 0.25rem),
            size.$sm: (height: 0.5rem),
            size.$md: (height: 0.75rem),
            size.$lg: (height: 1rem),
            size.$xl: (height: 1.25rem),
        ),
        themes: theme.$control-themes,
    ),
    // Space sizes
    space-sizes:
        (
            size.$lg: (
                padding: 1rem 0,
            ),
            size.$xl: (
                padding: 2rem 0,
            ),
        ),
    // Tab font sizes
    tab-sizes:
        (
            size.$xs: size.$font-size-xs,
            size.$sm: size.$font-size-s,
            size.$lg: size.$font-size-l,
            size.$xl: size.$font-size-xl,
        ),
    // UTILITIES //
    absolute:
        (
            auto: auto,
            0: 0,
            50p: 50%,
            100p: 100%,
            n50p: -50%,
            n100p: -100%,
        ),
    heights: (
        10: 10%,
        20: 20%,
        30: 30%,
        40: 40%,
        50: 50%,
        60: 60%,
        70: 70%,
        80: 80%,
        90: 90%,
        100: 100%,
        auto: auto,
        screen: 100vh,
    ),
    minmax-heights: (
        'none': none,
        size.$xs: map-get(size.$breakpoints, size.$xs),
        size.$sm: map-get(size.$breakpoints, size.$sm),
        size.$md: map-get(size.$breakpoints, size.$md),
        size.$lg: map-get(size.$breakpoints, size.$lg),
        size.$xl: map-get(size.$breakpoints, size.$xl),
        10: 10%,
        20: 20%,
        30: 30%,
        40: 40%,
        50: 50%,
        60: 60%,
        70: 70%,
        80: 80%,
        90: 90%,
        100: 100%,
        screen: 100vh,
    ),
    minmax-widths: (
        'none': none,
        size.$xs: map-get(size.$breakpoints, size.$xs),
        size.$sm: map-get(size.$breakpoints, size.$sm),
        size.$md: map-get(size.$breakpoints, size.$md),
        size.$lg: map-get(size.$breakpoints, size.$lg),
        size.$xl: map-get(size.$breakpoints, size.$xl),
        10: 10%,
        20: 20%,
        30: 30%,
        40: 40%,
        50: 50%,
        60: 60%,
        70: 70%,
        80: 80%,
        90: 90%,
        100: 100%,
        screen: 100vh,
    ),
    opacity: (
        '0': 0,
        '10': 0.1,
        '20': 0.2,
        '30': 0.3,
        '40': 0.4,
        '50': 0.5,
        '60': 0.6,
        '70': 0.7,
        '80': 0.8,
        '90': 0.9,
        '100': 1,
    ),
    round: (
        'none': 0px,
        size.$xs: .25rem,
        size.$sm: .5rem,
        size.$md: .75rem,
        size.$lg: 1rem,
        size.$xl: 1.25rem,
        'full': 9001px,
    ),
    shadows: (
        'none': (
            --cirrus-shadow: 0 0 #000,
        ),
        size.$xs: (
            --cirrus-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05),
        ),
        size.$sm: (
            --cirrus-shadow: (0 1px 3px 0 rgba(0, 0, 0, 0.1),
            0 1px 2px 0 rgba(0, 0, 0, 0.06)),
        ),
        size.$md: (
            --cirrus-shadow: (0 4px 6px -1px rgba(0, 0, 0, 0.1),
            0 2px 4px -1px rgba(0, 0, 0, 0.06)),
        ),
        size.$lg: (
            --cirrus-shadow: (0 10px 15px -3px rgba(0, 0, 0, 0.1),
            0 4px 6px -2px rgba(0, 0, 0, 0.05)),
        ),
        size.$xl: (
            --cirrus-shadow: (0 20px 25px -5px rgba(0, 0, 0, 0.1),
            0 10px 10px -5px rgba(0, 0, 0, 0.04)),
        ),
        'inset': (
            --cirrus-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.06),
        ),
    ),
    widths: (
        10: 10%,
        20: 20%,
        30: 30%,
        40: 40%,
        50: 50%,
        60: 60%,
        70: 70%,
        80: 80%,
        90: 90%,
        100: 100%,
        auto: auto,
        screen: 100vw,
    ),
    z-index: (
        0: 0,
        10: 10,
        20: 20,
        30: 30,
        40: 40,
        50: 50,
        auto: auto,
    )
) !default;

// ==================================================
// Exported values
// ==================================================
$all-config: map.deep-merge($default-config, $config);

// ==================================================
// Exported values
// ==================================================

// FLAGS
$viewport-flags: map.get($all-config, viewports);
$excludes: map.get($all-config, excludes);
$includes: map.get($all-config, includes);

// COLORS
/* v2 Colors */
$pinks: functions.map-get-deep($all-config, 'colors.pinks');
$reds: functions.map-get-deep($all-config, 'colors.reds');
$oranges: functions.map-get-deep($all-config, 'colors.oranges');
$yellows: functions.map-get-deep($all-config, 'colors.yellows');
$greens: functions.map-get-deep($all-config, 'colors.greens');
$teals: functions.map-get-deep($all-config, 'colors.teals');
$blues: functions.map-get-deep($all-config, 'colors.blues');
$indigos: functions.map-get-deep($all-config, 'colors.indigos');
$purples: functions.map-get-deep($all-config, 'colors.purples');
$grays: functions.map-get-deep($all-config, 'colors.grays');
$v2Palettes: (
    'pink': $pinks,
    'red': $reds,
    'orange': $oranges,
    'yellow': $yellows,
    'green': $greens,
    'teal': $teals,
    'blue': $blues,
    'indigo': $indigos,
    'purple': $purples,
    'gray': $grays,
);

// COMPONENTS
$avatar-sizes: map.get($all-config, avatar-sizes);
$button-sizes: map.get($all-config, button-sizes);
$form-label-sizes: map.get($all-config, form-label-sizes);
$font-heading-sizes: functions.map-get-deep($all-config, 'fonts.sizes.heading');
$font-headline-sizes: functions.map-get-deep($all-config, 'fonts.sizes.headline');
$font-text-sizes: functions.map-get-deep($all-config, 'fonts.sizes.text');
$font-transforms: functions.map-get-deep($all-config, 'fonts.transforms');
$font-weights: functions.map-get-deep($all-config, 'fonts.weights');

// Form sizes
$input-sizes: functions.map-get-deep($all-config, 'form-sizes.input-sizes');
$input-contains-icon-padding: functions.map-get-deep($all-config, 'form-sizes.input-contains-icon-padding');
$input-icon-sizes: functions.map-get-deep($all-config, 'form-sizes.input-icon-sizes');

$progress-bar-sizes: functions.map-get-deep($all-config, 'progress.sizes');
$progress-bar-themes: functions.map-get-deep($all-config, 'progress.themes');
$space-sizes: map.get($all-config, space-sizes);
$tab-font-sizes: map.get($all-config, tab-sizes);

// UTILS
$absolute: map.get($all-config, absolute);

$heights: map.get($all-config, heights);
$widths: map.get($all-config, widths);
$minmax-heights: map.get($all-config, minmax-heights);
$minmax-widths: map.get($all-config, minmax-widths);

$opacities: map.get($all-config, opacity);
$round: map.get($all-config, round);
$shadows: map.get($all-config, shadows);
$z-indexes: map.get($all-config, z-index);

/*
    Fetch feature flag for different utility class types for generating viewport classes (e.g., u-flex-sm, u-flex-md, etc.).
*/
@function get-viewport-flag($name) {
    @return get-viewport-flag-internal($viewport-flags, $name);
}
@function get-viewport-flag-internal($flag-map, $name) {
    @if not map-has-key($flag-map, $name) {
        @return throw.error(
            $message: '[get-viewport-flag] Unknown constant `#{$name}`.',
            $source: 'get-viewport-flag()',
            $catch: true
        );
    }

    @return map.get($flag-map, $name);
}

/*
  Helper function to determine if a set of classes should be generated based on given include/exclude configuration.
*/
@function should-generate-classes($flag) {
    @return should-generate-classes-internal($includes, $excludes, $flag);
}
@function should-generate-classes-internal($to-include, $to-exclude, $flag) {
    $generate-classes: true;
    @if list.index($to-exclude, flags.$ALL) {
      $generate-classes: false;
    }
    @if list.index($to-exclude, $flag) {
      $generate-classes: false;
    }
    @if list.index($to-include, $flag) {
      $generate-classes: true;
    }

    @return $generate-classes;
}
